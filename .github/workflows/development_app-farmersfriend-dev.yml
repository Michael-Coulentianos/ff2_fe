name: Build and deploy Node.js app to Azure Web App - app-FarmersFriend-dev

on:
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Prune dev dependencies
        run: npm prune --production

      - name: Build project
        run: CI=false npm run build --if-present

      - name: Create artifact archive
        run: |
          mkdir build_output
          cp -r $(ls | grep -v build_output) build_output/
          tar -czf node-app.tar.gz -C build_output .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: node-app.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Extract artifact
        run: |
          mkdir -p build_output
          tar -xzf node-app.tar.gz -C build_output

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7B1ED4B67D6F4B69A7F01E6B483EFC7B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8EECBF44721B45B590A169A1D5104102 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_78C4DF8CEFE04DD198F996B6D8B6FF36 }}

      - name: Deploy to staging slot
        id: deploy-to-staging
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-FarmersFriend-dev'
          slot-name: 'staging'
          package: build_output

      - name: Swap slots
        run: |
          az webapp deployment slot swap --name app-FarmersFriend-dev --resource-group <RESOURCE_GROUP> --slot staging --target-slot production
